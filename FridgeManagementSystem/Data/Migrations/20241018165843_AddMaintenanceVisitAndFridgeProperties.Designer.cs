// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FridgeManagementSystem.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20241018165843_AddMaintenanceVisitAndFridgeProperties")]
    partial class AddMaintenanceVisitAndFridgeProperties
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FridgeManagementSystem.Models.Customer", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CustomerId"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CustomerId");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("FridgeManagementSystem.Models.FaultReport", b =>
                {
                    b.Property<int>("ReportId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReportId"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FridgeId")
                        .HasColumnType("int");

                    b.Property<bool>("IsResolved")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ReportedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("TechnicianId")
                        .HasColumnType("int");

                    b.HasKey("ReportId");

                    b.HasIndex("FridgeId");

                    b.HasIndex("TechnicianId");

                    b.ToTable("FaultReports");
                });

            modelBuilder.Entity("FridgeManagementSystem.Models.Fridge", b =>
                {
                    b.Property<int>("FridgeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FridgeId"));

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("PurchaseDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("TechId")
                        .HasColumnType("int");

                    b.Property<int>("TechnicianTechId")
                        .HasColumnType("int");

                    b.HasKey("FridgeId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("TechnicianTechId");

                    b.ToTable("Fridges");
                });

            modelBuilder.Entity("FridgeManagementSystem.Models.MaintenanceRecord", b =>
                {
                    b.Property<int>("RecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RecordId"));

                    b.Property<DateTime>("ActivityDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Details")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FridgeId")
                        .HasColumnType("int");

                    b.Property<bool>("IsCompleted")
                        .HasColumnType("bit");

                    b.Property<int>("TechId")
                        .HasColumnType("int");

                    b.Property<int>("TechnicianTechId")
                        .HasColumnType("int");

                    b.HasKey("RecordId");

                    b.HasIndex("FridgeId");

                    b.HasIndex("TechnicianTechId");

                    b.ToTable("MaintenanceRecords");
                });

            modelBuilder.Entity("FridgeManagementSystem.Models.MaintenanceVisit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ActionsTaken")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FridgeId")
                        .HasColumnType("int");

                    b.Property<bool>("IsCompleted")
                        .HasColumnType("bit");

                    b.Property<string>("IssuesFound")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ScheduledDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("TechId")
                        .HasColumnType("int");

                    b.Property<int>("TechnicianTechId")
                        .HasColumnType("int");

                    b.Property<DateTime>("VisitDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("FridgeId");

                    b.HasIndex("TechnicianTechId");

                    b.ToTable("MaintenanceVisits");
                });

            modelBuilder.Entity("FridgeManagementSystem.Models.Technician", b =>
                {
                    b.Property<int>("TechId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TechId"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TechName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TechId");

                    b.ToTable("Technicians");
                });

            modelBuilder.Entity("FridgeManagementSystem.Models.FaultReport", b =>
                {
                    b.HasOne("FridgeManagementSystem.Models.Fridge", "Fridge")
                        .WithMany()
                        .HasForeignKey("FridgeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FridgeManagementSystem.Models.Technician", "Technician")
                        .WithMany()
                        .HasForeignKey("TechnicianId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Fridge");

                    b.Navigation("Technician");
                });

            modelBuilder.Entity("FridgeManagementSystem.Models.Fridge", b =>
                {
                    b.HasOne("FridgeManagementSystem.Models.Customer", "Customer")
                        .WithMany("Fridges")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FridgeManagementSystem.Models.Technician", "Technician")
                        .WithMany()
                        .HasForeignKey("TechnicianTechId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("Technician");
                });

            modelBuilder.Entity("FridgeManagementSystem.Models.MaintenanceRecord", b =>
                {
                    b.HasOne("FridgeManagementSystem.Models.Fridge", "Fridge")
                        .WithMany()
                        .HasForeignKey("FridgeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FridgeManagementSystem.Models.Technician", "Technician")
                        .WithMany()
                        .HasForeignKey("TechnicianTechId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Fridge");

                    b.Navigation("Technician");
                });

            modelBuilder.Entity("FridgeManagementSystem.Models.MaintenanceVisit", b =>
                {
                    b.HasOne("FridgeManagementSystem.Models.Fridge", "Fridge")
                        .WithMany("MaintenanceVisits")
                        .HasForeignKey("FridgeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FridgeManagementSystem.Models.Technician", "Technician")
                        .WithMany("MaintenanceVisits")
                        .HasForeignKey("TechnicianTechId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Fridge");

                    b.Navigation("Technician");
                });

            modelBuilder.Entity("FridgeManagementSystem.Models.Customer", b =>
                {
                    b.Navigation("Fridges");
                });

            modelBuilder.Entity("FridgeManagementSystem.Models.Fridge", b =>
                {
                    b.Navigation("MaintenanceVisits");
                });

            modelBuilder.Entity("FridgeManagementSystem.Models.Technician", b =>
                {
                    b.Navigation("MaintenanceVisits");
                });
#pragma warning restore 612, 618
        }
    }
}
